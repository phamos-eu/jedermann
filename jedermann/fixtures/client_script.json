[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-12-04 15:49:21.554850",
  "module": null,
  "name": "Set Invoice Set",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    setup(frm) {\n        set_fields(frm)\n    },\n    custom_sales_invoice_type(frm) {\n        set_fields(frm)\n    },\n// \tis_return(frm) {\n// \t    if (frm.doc.is_return) {\n// \t        frm.set_value(\"custom_sales_invoice_type\", \"Korrekturrechnung\")\n// \t    } else {\n// \t        frm.set_value(\"custom_sales_invoice_type\", \"Rechnung\")\n// \t    }\n\n// \t\tfrm.refresh_field(\"custom_sales_invoice_type\")\n// \t}\n})\n\n\nvar set_fields = function (frm) {\n    if (frm.doc.custom_sales_invoice_type == \"Korrekturrechnung\") {\n        frm.set_value(\"is_return\", 1)\n\n        frm.set_df_property(\"is_return\", \"hidden\", 0);\n        frm.set_df_property(\"is_debit_note\", \"hidden\", 1);\n        frm.set_df_property(\"return_against\", \"hidden\", 0); \n\n    } else if (frm.doc.custom_sales_invoice_type == \"Gutschrift\") {\n        frm.set_value(\"is_return\", 1)\n\n        frm.set_df_property(\"is_return\", \"hidden\", 0);\n        frm.set_df_property(\"is_debit_note\", \"hidden\", 1);\n        frm.set_df_property(\"return_against\", \"hidden\", 1); \n        \n    } else {\n        frm.set_value(\"is_return\", 0)\n\n        frm.set_df_property(\"is_return\", \"hidden\", 1);\n        frm.set_df_property(\"is_debit_note\", \"hidden\", 1);\n        frm.set_df_property(\"return_against\", \"hidden\", 1); \n\n    }\n    frm.refresh_fields()\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-12-04 15:49:21.339220",
  "module": null,
  "name": "Delivery note Validation",
  "script": "frappe.ui.form.on('Sales Invoice', {\n\tvalidate(frm) {\n\t\tlet delivery_notes = [...new Set(cur_frm.doc.items.map(item => item.delivery_note).filter(note => note))];\n\t\tif (delivery_notes.length == 1) {\n\t\t    let delivery_note = delivery_notes[0]\n\t\t    frm.set_value(\"custom_delivery_note\", delivery_note);\n            frappe.db.get_value(\n                \"Delivery Note\",\n                { name: delivery_note },\n                \"posting_date\",\n                (r) => {\n                    if (r && r.posting_date) {\n                        frm.set_value(\"custom_delivery_date\", r.posting_date);\n                    }\n                }\n            );\n\t\t} else if (delivery_notes.length > 1) {\n\t\t    frm.set_value(\"custom_delivery_note\", \"\");\n\t\t    frm.set_value(\"custom_delivery_date\", \"\");\n\t\t    let formatted_notes = delivery_notes.join(', ').replace(/, ([^,]*)$/, ' and $1');\n\t\t    frappe.throw(`Sales invoice contains items from ${formatted_notes}, all items should referenced from only Delivery Note`);\n\t\t}\n\t}\n})",
  "view": "Form"
 }
]